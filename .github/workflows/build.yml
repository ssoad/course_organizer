name: Build Course Organizer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install poppler
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y poppler-utils
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        # Download and extract poppler for Windows
        curl -L https://github.com/oschwartz10612/poppler-windows/releases/latest/download/Release-dll.zip -o poppler.zip
        7z x poppler.zip -opopplerbin

    - name: Build Application
      env:
        POPPLER_PATH: ${{ runner.os == 'Windows' && github.workspace }}/popplerbin || '/usr/local/opt/poppler'
      run: |
        python -m PyInstaller build.spec

    - name: Create ZIP (macOS)
      if: runner.os == 'macOS'
      run: |
        cd dist
        zip -r ../CourseOrganizer-macOS.zip "Course Organizer.app"

    - name: Create ZIP (Windows)
      if: runner.os == 'Windows'
      run: |
        cd dist
        7z a ../CourseOrganizer-Windows.zip "Course Organizer"

    - name: Create ZIP (Linux)
      if: runner.os == 'Linux'
      run: |
        cd dist
        zip -r ../CourseOrganizer-Linux.zip "Course Organizer"

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: CourseOrganizer-${{ matrix.os }}
        path: |
          dist/
          !dist/**/*.pyc
          !dist/**/__pycache__
        if-no-files-found: error
        retention-days: 5

    - name: Download All Artifacts
      uses: actions/download-artifact@v3
      if: github.event_name == 'release'
      with:
        path: releases

    - name: Create Release Asset
      if: github.event_name == 'release'
      run: |
        platform=""
        case "${{ runner.os }}" in
          "macOS")
            platform="macOS"
            cd releases/CourseOrganizer-macos-latest
            zip -r ../../CourseOrganizer-macOS.zip .
            ;;
          "Windows")
            platform="Windows"
            cd releases/CourseOrganizer-windows-latest
            7z a ../../CourseOrganizer-Windows.zip .
            ;;
          "Linux")
            platform="Linux"
            cd releases/CourseOrganizer-linux-latest
            zip -r ../../CourseOrganizer-Linux.zip .
            ;;
        esac

    - name: Upload Release Asset
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./CourseOrganizer-${{ runner.os }}.zip
        asset_name: CourseOrganizer-${{ runner.os }}.zip
        asset_content_type: application/zip
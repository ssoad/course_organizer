name: Build Course Organizer

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: arm64
          - os: macos-latest
            arch: x64
          - os: windows-latest
          - os: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies (macOS-arm64)
      if: runner.os == 'macOS' && matrix.arch == 'arm64'
      run: |
        brew install poppler
        brew install create-dmg
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller==6.0.0
        
        echo "POPPLER_PATH=$(brew --prefix poppler)" >> $GITHUB_ENV
        echo "ARCHFLAGS='-arch arm64'" >> $GITHUB_ENV

    - name: Install dependencies (macOS-x64)
      if: runner.os == 'macOS' && matrix.arch == 'x64'
      run: |
        brew install poppler
        brew install create-dmg
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller==6.0.0
        
        echo "POPPLER_PATH=$(brew --prefix poppler)" >> $GITHUB_ENV
        echo "ARCHFLAGS='-arch x86_64'" >> $GITHUB_ENV

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y poppler-utils
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
        echo "Downloading poppler for Windows..."
        curl -L -o poppler.zip "https://github.com/oschwartz10612/poppler-windows/releases/download/v24.08.0-0/Release-24.08.0-0.zip"
        
        dir poppler.zip
        
        echo "Extracting poppler..."
        7z x poppler.zip -opopplerbin -y
        
        dir popplerbin

    - name: Set Poppler Path (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        echo "POPPLER_PATH=$GITHUB_WORKSPACE/popplerbin" >> $GITHUB_ENV
        ls -la $GITHUB_WORKSPACE/popplerbin

    - name: Set Poppler Path (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: echo "POPPLER_PATH=/usr" >> $GITHUB_ENV

    - name: Debug Environment Variables (Unix)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        echo "Current directory: $(pwd)"
        echo "POPPLER_PATH: $POPPLER_PATH"
        ls -la

    - name: Debug Environment Variables (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Write-Host "Current directory: $pwd"
        Write-Host "POPPLER_PATH: $env:POPPLER_PATH"
        Get-ChildItem
        
        if (Test-Path $env:POPPLER_PATH) {
          Write-Host "Poppler directory found"
          Get-ChildItem $env:POPPLER_PATH
        } else {
          Write-Host "ERROR: Poppler directory not found at $env:POPPLER_PATH"
        }

    - name: Build Application
      run: |
        python -m PyInstaller build.spec

    - name: Build macOS Application (arm64)
      if: runner.os == 'macOS' && matrix.arch == 'arm64'
      run: |
        sed -i '' 's/^.*target_arch=.*$/        target_arch="arm64",/' build.spec
        chmod +x build.sh
        python -m PyInstaller build.spec
        ./build.sh
        
        cd dist
        mv "Course Tracker.app" "Course Tracker-arm64.app" || true
        cd ..
        mv "Course Tracker.dmg" "Course Tracker-arm64.dmg" || true

    - name: Build macOS Application (x64)
      if: runner.os == 'macOS' && matrix.arch == 'x64'
      run: |
        sed -i '' 's/^.*target_arch=.*$/        target_arch="x86_64",/' build.spec
        chmod +x build.sh
        python -m PyInstaller build.spec
        ./build.sh
        
        cd dist
        mv "Course Tracker.app" "Course Tracker-x64.app" || true
        cd ..
        mv "Course Tracker.dmg" "Course Tracker-x64.dmg" || true

    - name: Create ZIP (macOS-arm64)
      if: runner.os == 'macOS' && matrix.arch == 'arm64'
      run: |
        cd dist
        zip -r ../CourseOrganizer-macOS-arm64.zip *-arm64.app

    - name: Create ZIP (macOS-x64)
      if: runner.os == 'macOS' && matrix.arch == 'x64'
      run: |
        cd dist
        zip -r ../CourseOrganizer-macOS-x64.zip *-x64.app

    - name: Create ZIP (Windows)
      if: runner.os == 'Windows'
      run: |
        Write-Host "Contents of dist directory:"
        Get-ChildItem -Path dist -Force
        
        cd dist
        7z a ../CourseOrganizer-Windows.zip *

    - name: Create ZIP (Linux)
      if: runner.os == 'Linux'
      run: |
        cd dist
        echo "Contents of dist directory:"
        ls -la
        zip -r ../CourseOrganizer-Linux.zip ./*

    - name: Upload Build Artifact (Windows/Linux)
      if: runner.os != 'macOS'
      uses: actions/upload-artifact@master
      with:
        name: CourseOrganizer-${{ runner.os }}
        path: CourseOrganizer-${{ runner.os }}.zip
        if-no-files-found: error
        retention-days: 5

    - name: Upload Build Artifact (macOS)
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v3
      with:
        name: CourseOrganizer-macOS-${{ matrix.arch }}
        path: |
          CourseOrganizer-macOS-${{ matrix.arch }}.zip
          *-${{ matrix.arch }}.dmg
        if-no-files-found: warn
        retention-days: 5

    - name: Upload Release Asset (Windows/Linux)
      if: github.event_name == 'release' && runner.os != 'macOS'
      uses: softprops/action-gh-release@v1
      with:
        files: CourseOrganizer-${{ runner.os }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset (macOS)
      if: github.event_name == 'release' && runner.os == 'macOS'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          CourseOrganizer-macOS-${{ matrix.arch }}.zip
          Course Tracker-${{ matrix.arch }}.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}